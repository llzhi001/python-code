【Python快速入门】练习一
【Python快速入门】课程第一周练习题，含1小时实践（分4道题目）和5道编程题

整数计算小练习
描述
这是一个关于"整数计算"的小练习，包含两部分内容：跟随练习 和 小测验。

在"跟随练习"环节，请使用IDLE编辑器的交互模式，逐一输入以下语句，观察并比较输出结果。

在"小测验"环节，请在本题目对应的"提交代码"页面按要求输入代码，"保存并提交评判"后查看结果。

跟随练习
 请使用IDLE编辑器的交互模式（含有 >> >提示符），按顺序逐一输入以下语句（共30个）：

>> > 1+10
11
>> > 1+0xa
11
>> > 1+0b1010
11
>> > 1+0o12
11
>> > 1010 // 11
91
>> > 1010 / 11
91.81818181818181
>> > 1010 % 11
9
>> > pow(2, 10)
1024
>> > 2**10
1024
>> > pow(2, 0.5)
1.4142135623730951
>> > abs(-1010)
1010
>> > a = 2**10
>> > print(a)
1024
>> > b = 3*10
>> > a + b
1054
>> > print(a)
1024
>> > a = a + b
>> > print(a)
1054
>> > print(a, b)
1054 30
>> > a, b = b, a
>> > print(a, b)
30 1054
>> > str(a)
‘30’
>> > bin(a)
'0b11110'
>> > oct(a)
'0o36'
>> > hex(a)
'0x1e'
>> > a += 1
>> > print(a)
31
>> > a **= 2
>> > print(a)
961
>> > max(a, b, 10, 20, 100, 200)
1054


小测验
请将如下代码粘贴至"提交代码"页面，"保存并提交评判"后查看结果。注意，此时代码不是交互模式，而是文件模式。

a = 0x123F
b = 4669
c = pow(a+b, a-b)
print(min(a, b, c))

浮点数计算小练习

描述
这是一个关于"浮点数计算"的小练习，包含两部分内容：跟随练习 和 小测验。

在"跟随练习"环节，请使用IDLE编辑器的交互模式，逐一输入以下语句，观察并比较输出结果。

在"小测验"环节，请在本题目对应的"提交代码"页面按要求输入代码，"保存并提交评判"后查看结果。

跟随练习
 请使用IDLE编辑器的交互模式（含有 >> >提示符），按顺序逐一输入以下语句（共25个）：

>> > 12.3 + 98.7
111.0
>> > 1.23e1 + 9.87e1
111.0
>> > type(12.3)
<class 'float' >
>> > type(123)
<class 'int' >
>> > str(12.3)
'12.3'
>> > float(123)
123.0
>> > float("12.3")
12.3
>> > a = 101
>> > b = 1.0
>> > print(a*b)
101.0
>> > 12.3*0.1
1.2300000000000002
>> > round(12.3*0.1, 2)
1.23
>> > 0.1 + 0.2
0.30000000000000004
>> > round(0.1 + 0.2, 1)
0.3
>> > 0.1 + 0.2 == 0.3
False
>> > round(0.1 + 0.2, 1) == 0.3
True
>> > "{:.2f}".format(1234.56789)
'1234.57'
>> > "{:.1f}".format(1234.56789)
'1234.6'
>> > "{:.10f}".format(1234.56789)
'1234.5678900000'
>> > "{:,.1f}".format(1234.56789)
'1,234.6'
>> > print("{:,.1f}".format(1234.56789))
1, 234.6
>> > "{:.1e}".format(1234.56789)
'1.2e+03'
>> > min(1.23, 4.56, 1, 1.1)
1
>> > max(1.23, 4.56)
4.56
>> > pow(1.23, 4.56)
2.5702023016193025
小测验

请将如下代码粘贴至"提交代码"页面，"保存并提交评判"后查看结果。注意，此时代码不是交互模式，而是文件模式。

a = 12.3
b = 45.6
if round(a + b, 1) == 57.9:
    print("equal")
else:
    print("not equal")

复数计算小练习

描述
这是一个关于"复数计算"的小练习，包含两部分内容：跟随练习 和 小测验。

在"跟随练习"环节，请使用IDLE编辑器的交互模式，逐一输入以下语句，观察并比较输出结果。

在"小测验"环节，请在本题目对应的"提交代码"页面按要求输入代码，"保存并提交评判"后查看结果。

跟随练习
 请使用IDLE编辑器的交互模式（含有 >> >提示符），按顺序逐一输入以下语句（共15个）：

>> > 12 + 34.5j
(12+34.5j)
>> > 12+34.5j+6+7.8j
(18+42.3j)
>> > type(1+2j)
<class 'complex' >
>> > complex(123)
(123+0j)
>> > (1+2j)*10
(10+20j)
>> > (1+2j)**2
(-3+4j)
>> > z = 12+34.5j
>> > print(z)
(12+34.5j)
>> > z.imag
34.5
>> > z.real
12.0
>> > type(z.imag)
<class 'float' >
>> > type(z.real)
<class 'float' >
>> > y = 1+2j
>> > print(y*z)
(-57+58.5j)
>> > 1+2j == 1.0+2.0J
True
小测验

请将如下代码粘贴至"提交代码"页面，"保存并提交评判"后查看结果。注意，此时代码不是交互模式，而是文件模式。

z = 12.3 + 45.6J
y = 12.3 - 45.6j
if type(z*y) == type(1j):
    print("complex")
elif type(z*y) == type(1):
    print("int")
elif type(z*y) == type(1.0):
    print("float")
else:
    print("others")

数值计算综合练习
描述
这是一个关于"数值计算"的综合练习，覆盖整数、浮点数和复数运算，包含两部分内容：跟随练习 和 小测验。

在"跟随练习"环节，请使用IDLE编辑器的交互模式，逐一输入以下语句，观察并比较输出结果。

在"小测验"环节，请在本题目对应的"提交代码"页面按要求输入代码，"保存并提交评判"后查看结果。

跟随练习
 请使用IDLE编辑器的交互模式（含有 >> >提示符），按顺序逐一输入以下语句（共30个）：

>> > 10 + 12.3
22.3
>> > 0xa + 0b1010
20
>> > int(1.99)
1
>> > round(1.99)
2
>> > float(10)
10.0
>> > complex(10)
(10+0j)
>> > type((10+0j).real)
<class 'float' >
>> > (1+2j)*0
0j
>> > 1.23*0
0.0
>> > 1024*0
0
>> > abs(3+4j)
5.0
>> > str(3+4j)
'(3+4j)'
>> > hex(123)
'0x7b'
>> > a = 2**10
>> > b = 1 + 2j
>> > a, b = b, a
>> > print(a, b)
(1+2j) 1024
>> > a += b
>> > print(a, b)
(1025+2j) 1024
>> > a *= 0
>> > print(a)
0j
>> > int(a)
Traceback(most recent call last):
  File "<pyshell#127>", line 1, in < module >
    int(a)
TypeError: can't convert complex to int
>> > int(a.imag)
0
>> > max(1, 1.0, 0.4)
1
>> > max(1.0, 1, 0.4)
1.0
>> > min(1, 1.0, 1j)
Traceback(most recent call last):
  File "<pyshell#132>", line 1, in < module >
    min(1, 1.0, 1j)
TypeError: unorderable types: complex() < int()
>> > type(100//11)
<class 'int' >
>> > type(100/11)
<class 'float' >
>> > type(100 % 2.0) == type(1)
Flase
>> > len(str(999**99))
297
小测验
请将如下代码粘贴至"提交代码"页面，"保存并提交评判"后查看结果。注意，此时代码不是交互模式，而是文件模式。

a = 123456
b = a**789
print(len(str(b)))

世界，你好！
描述
打印输出如下两行字符：

世界，你好！

Python，我来了！

输入格式
无

输出格式
两行字符信息

 	输入	输出
示例 1	无
世界，你好！
Python，我来了！

print('世界，你好！')
print('Python，我来了！')

习题讲解
【参考代码】

print("世界，你好！")
print("Python，我来了！")
或者

print("世界，你好！\nPython，我来了！")


简单的回声输出
描述
获得用户输入，直接打印输出。

输入格式
任意数据

输出格式
任意数据

输入输出示例

 	输入	输出
示例 1
Python是一个通用语言
Python是一个通用语言

print(input())

习题讲解
【参考代码】

print(input())
还有比这个更简单的程序吗？^ _^

简单的温度转换
描述
获得用户输入的一个华氏温度值，将其转换成摄氏温度并输出，保留小数点后两位。

用户输入可以是任意实数形式的温度值，不考虑异常输出情况。

华氏温度到摄氏温度转换公式如下，其中：F: 华氏温度，C：摄氏温度。

C = (F - 32) / 1.8

输入格式
一个数字

输出格式
一个数字，保留小数点后两位。

输入输出示例
 	输入	输出
示例 1
123.4
50.78

F = eval(input())
C = (F - 32) / 1.8
print("{:.2f}".format(C))

习题讲解
【参考代码】

F = eval(input())
C = (F-32)/1.8
print("{:.2f}".format(C))
{: .2f} 能够保留小数点后两位

三数值平均值
描述
获得输入的三个数字，每个数字独立一行输入，输出三个数值的平均值，保留小数点后两位。

不考虑异常输入。

输入格式
连续输入三个数字。

输出格式
保留小数点两位的数值。

输入输出示例

 	输入	输出
示例 1
10
20
30
20.00
示例2
123.456
78.9
-98.7654

34.53

a = eval(input())
b = eval(input())
c = eval(input())

avg = (a+b+c)/3
print("{:.2f}".format(avg))

习题讲解
【参考代码】

a = eval(input())
b = eval(input())
c = eval(input())
print("{:.2f}".format((a+b+c)/3))
获得多行输入可以采用多个input()函数。

长度转换
描述
请在公制长度和英制长度之间进行转换，具体来说，以"米"和"英尺"为单位进行长度转换。

从输入获得长度值和长度符号，例如：10m 或 10ft，输出转换后长度值和长度符号，输入长度值不限，输出长度值保存小数点后两位。1m = 3.2808ft

如果输入不符合格式，则输出"格式错误"的提示。注意：在Python123中获得输入请使用input()，不要增加任何参数。

输入格式
长度值和长度符号，其中，长度值是任何合法数值。

输出格式
长度值和长度符号，其中，长度值保留小数点后两位。

输入输出示例
 	输入	输出
示例 1
123m
403.54ft
示例 2
99.9876543ft
30.48m

LenStr = input()
if LenStr[-1] in ['M', 'm']:
    FT = eval(LenStr[0:-1]) * 3.2808
    print("{:.2f}ft".format(FT))
elif LenStr[-2:] in ['FT', 'ft']:
    M = eval(LenStr[0:-2]) / 3.2808
    print("{:.2f}m".format(M))
else:
    print("输入格式错误")

习题讲解
【参考代码】

alen = input()
if alen[-1] == "m":
    blen = eval(alen[:-1])*3.2808
    print("{:.2f}ft".format(blen))
elif alen[-2:] == "ft":
    blen = eval(alen[:-2])/3.2808
    print("{:.2f}m".format(blen))
else:
    print("格式错误")
用户输入的长度值和符号保存在alen中，转换后的长度值保存在blen中。{: .2f}保留小数点后两位。
